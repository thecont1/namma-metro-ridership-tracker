name: Metro Ridership Data Collection

on:
  schedule:
    - cron: '33 7 * * *'  # 07:33 UTC / 13:03 IST
    - cron: '7 12 * * *'  # 12:07 UTC / 17:37 IST
    - cron: '22 17 * * *' # 17:22 UTC / 22:52 IST
  workflow_dispatch:  # Allows manual trigger for testing

jobs:
  collect-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Cache Chrome and ChromeDriver
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/google-chrome
          ~/.cache/chromedriver
        key: ${{ runner.os }}-chrome-${{ hashFiles('**/.github/workflows/ridership_data.yml') }}
    
    - name: Install Chrome
      run: |
        if [ ! -f ~/.cache/google-chrome/google-chrome-stable ]; then
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          mkdir -p ~/.cache/google-chrome
          cp $(which google-chrome-stable) ~/.cache/google-chrome/
        else
          sudo cp ~/.cache/google-chrome/google-chrome-stable /usr/bin/
        fi
    
    - name: Install ChromeDriver
      run: |
        mkdir -p ~/.cache/chromedriver
        # Get Chrome version with better error handling
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d. -f1)
        echo "Detected Chrome version: $CHROME_VERSION"
        
        # Get matching ChromeDriver version
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
        echo "Matching ChromeDriver version: $CHROMEDRIVER_VERSION"
        
        if [ -z "$CHROMEDRIVER_VERSION" ]; then
          echo "Failed to get ChromeDriver version. Using latest stable version instead."
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
          echo "Using latest stable ChromeDriver: $CHROMEDRIVER_VERSION"
        fi
        
        # Download and install ChromeDriver
        echo "Downloading ChromeDriver version $CHROMEDRIVER_VERSION..."
        curl -L -o /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        
        echo "Extracting ChromeDriver..."
        unzip -o /tmp/chromedriver.zip -d /tmp
        
        echo "Installing ChromeDriver..."
        chmod +x /tmp/chromedriver
        sudo mv /tmp/chromedriver /usr/local/bin/
        
        echo "Verifying ChromeDriver installation..."
        chromedriver --version || echo "ChromeDriver installation failed"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run ridership data collection
      run: python ridership.py
      
    - name: Configure Git
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email 'actions@github.com'
        
    - name: Commit and push changes
      run: |
        git add NammaMetro_Ridership_Dataset.csv
        # Only commit if there are changes
        git diff --quiet && git diff --staged --quiet || git commit -m "Update ridership data [automated]"
        git push